{"ast":null,"code":"var _jsxFileName = \"/Users/adhikari/Documents/Python/FactfirstAINews/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './Modern.css';\nimport Header from './Header';\nimport Loading from './Loading';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [news, setNews] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    axios.get('http://127.0.0.1:5000/get_news').then(response => {\n      console.log('Raw data received from server:', response.data);\n      let parsedData;\n      try {\n        // Check if the response data is a string that needs parsing\n        if (typeof response.data === 'string') {\n          parsedData = JSON.parse(response.data);\n        } else {\n          parsedData = response.data; // It's already an object\n        }\n      } catch (e) {\n        setError('Failed to parse server response.');\n        console.error(\"JSON parsing error:\", e);\n        setLoading(false);\n        return;\n      }\n\n      // Check if the expected data structure is present\n      if (parsedData && parsedData.analysis && parsedData.factual_headline) {\n        setNews(parsedData);\n      } else {\n        // If the data format is not what we expect, set an error.\n        setError('Received unexpected data format from the server.');\n        console.error('Unexpected data format:', parsedData);\n      }\n      setLoading(false);\n    }).catch(err => {\n      console.error('Error fetching news:', err);\n      setError('There was an error fetching the news. Please check the server and your network connection.');\n      setLoading(false);\n    });\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 16\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 16\n    }, this);\n  }\n  if (!news) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: \"No news analysis available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 16\n    }, this);\n  }\n\n  // Destructure for easier access\n  const {\n    factual_headline,\n    emoji_thumbnail,\n    analysis\n  } = news;\n  const {\n    core_facts,\n    sentiments\n  } = analysis;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: /*#__PURE__*/_jsxDEV(\"article\", {\n        className: \"story-analysis\",\n        children: [/*#__PURE__*/_jsxDEV(\"header\", {\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"factual-headline\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"emoji-thumbnail\",\n              children: emoji_thumbnail\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 29\n            }, this), \" \", factual_headline]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"core-facts\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Core Facts\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: core_facts && core_facts.map((fact, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: fact\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"sentiment-analysis\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Sentiment Analysis\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sentiments-container\",\n            children: sentiments && Object.entries(sentiments).map(([sentiment, data]) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `sentiment-card sentiment-${sentiment}`,\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: sentiment.charAt(0).toUpperCase() + sentiment.slice(1)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"sentiment-summary\",\n                children: data.summary\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Source Examples:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                children: data.examples && data.examples.map((example, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: [example.source, \":\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 96,\n                    columnNumber: 49\n                  }, this), \" \\\"\", example.text, \"\\\"\"]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 45\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 37\n              }, this)]\n            }, sentiment, true, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"enRou7bdcb4q2eSWhFDpG2Jjlts=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","Header","Loading","jsxDEV","_jsxDEV","App","_s","news","setNews","loading","setLoading","error","setError","get","then","response","console","log","data","parsedData","JSON","parse","e","analysis","factual_headline","catch","err","fileName","_jsxFileName","lineNumber","columnNumber","className","children","emoji_thumbnail","core_facts","sentiments","map","fact","index","Object","entries","sentiment","charAt","toUpperCase","slice","summary","examples","example","source","text","_c","$RefreshReg$"],"sources":["/Users/adhikari/Documents/Python/FactfirstAINews/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './Modern.css';\nimport Header from './Header';\nimport Loading from './Loading';\n\nfunction App() {\n    const [news, setNews] = useState(null);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        axios.get('http://127.0.0.1:5000/get_news')\n            .then(response => {\n                console.log('Raw data received from server:', response.data);\n\n                let parsedData;\n                try {\n                    // Check if the response data is a string that needs parsing\n                    if (typeof response.data === 'string') {\n                        parsedData = JSON.parse(response.data);\n                    } else {\n                        parsedData = response.data; // It's already an object\n                    }\n                } catch (e) {\n                    setError('Failed to parse server response.');\n                    console.error(\"JSON parsing error:\", e);\n                    setLoading(false);\n                    return;\n                }\n\n                // Check if the expected data structure is present\n                if (parsedData && parsedData.analysis && parsedData.factual_headline) {\n                    setNews(parsedData);\n                } else {\n                    // If the data format is not what we expect, set an error.\n                    setError('Received unexpected data format from the server.');\n                    console.error('Unexpected data format:', parsedData);\n                }\n                setLoading(false);\n            })\n            .catch(err => {\n                console.error('Error fetching news:', err);\n                setError('There was an error fetching the news. Please check the server and your network connection.');\n                setLoading(false);\n            });\n    }, []);\n\n    if (loading) {\n        return <Loading />;\n    }\n\n    if (error) {\n        return <div className=\"error-message\">{error}</div>;\n    }\n\n    if (!news) {\n        return <div className=\"container\">No news analysis available.</div>;\n    }\n\n    // Destructure for easier access\n    const { factual_headline, emoji_thumbnail, analysis } = news;\n    const { core_facts, sentiments } = analysis;\n\n    return (\n        <div className=\"container\">\n            <Header />\n            <main>\n                <article className=\"story-analysis\">\n                    <header>\n                        <h1 className=\"factual-headline\">\n                            <span className=\"emoji-thumbnail\">{emoji_thumbnail}</span> {factual_headline}\n                        </h1>\n                    </header>\n\n                    <section className=\"core-facts\">\n                        <h2>Core Facts</h2>\n                        <ul>\n                            {core_facts && core_facts.map((fact, index) => (\n                                <li key={index}>{fact}</li>\n                            ))}\n                        </ul>\n                    </section>\n\n                    <section className=\"sentiment-analysis\">\n                        <h2>Sentiment Analysis</h2>\n                        <div className=\"sentiments-container\">\n                            {sentiments && Object.entries(sentiments).map(([sentiment, data]) => (\n                                <div key={sentiment} className={`sentiment-card sentiment-${sentiment}`}>\n                                    <h3>{sentiment.charAt(0).toUpperCase() + sentiment.slice(1)}</h3>\n                                    <p className=\"sentiment-summary\">{data.summary}</p>\n                                    <h4>Source Examples:</h4>\n                                    <ul>\n                                        {data.examples && data.examples.map((example, index) => (\n                                            <li key={index}>\n                                                <strong>{example.source}:</strong> \"{example.text}\"\n                                            </li>\n                                        ))}\n                                    </ul>\n                                </div>\n                            ))}\n                        </div>\n                    </section>\n                </article>\n            </main>\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}